{"version":3,"sources":["wavify.js","init.js"],"names":["wavify","wave_element","options","lastUpdate","settings","Object","assign","container","height","amplitude","speed","bones","color","wave","stopped","width","document","querySelector","getBoundingClientRect","totalTime","animationInstance","tweenMaxInstance","draw","factor","now","window","Date","elapsed","Math","PI","TweenMax","to","attr","d","points","SVGString","x","y","cp0","prevCp","i","length","sqrt","cp1","inverted","drawPath","sinSeed","sinHeight","sin","yPos","push","drawPoints","ease","Power1","easeInOut","requestAnimationFrame","setTimeout","cancelAnimationFrame","func","wait","immediate","timeout","redraw","pause","play","context","this","args","arguments","clearTimeout","apply","kill","set","rotation","opacity","clearProps","fill","removeEventListener","addEventListener","reboot","params","stop","updateColor","timing","parseInt","onComplete","toString","call","jQuery","fn","console","error","$","$body","on","each","_speed","random","toFixed","_color","data","_height","_bones","_amplitude","find","hasClass"],"mappings":"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","file":"../../wavify.min.js","sourcesContent":["/*\n * Wavify\n * JavaScript library to make some nice waves\n * by peacepostman @ crezeo\n*/\nfunction wavify(wave_element, options) {\n\tif (\"undefined\" === typeof options) options = {};\n\n\t//  Options\n\t//\n\t//\n\tvar settings = Object.assign(\n\t\t{},\n\t\t{\n\t\t\tcontainer: options.container ? options.container : \"body\",\n\t\t\t// Height of wave\n\t\t\theight: 200,\n\t\t\t// Amplitude of wave\n\t\t\tamplitude: 100,\n\t\t\t// Animation speed\n\t\t\tspeed: 0.15,\n\t\t\t// Total number of articulation in wave\n\t\t\tbones: 3,\n\t\t\t// Color\n\t\t\tcolor: \"rgba(255,255,255, 0.20)\"\n\t\t},\n\t\toptions\n\t);\n\n\tvar wave = wave_element,\n\t    stopped = false,\n\t    width = document.querySelector(settings.container).getBoundingClientRect().width,\n\t    height = document.querySelector(settings.container).getBoundingClientRect().height,\n\t    points = [],\n\t    lastUpdate,\n\t    totalTime = 0,\n\t    animationInstance = false,\n\t    tweenMaxInstance = false;\n\n\t//  Allow new settings, avoid setting new container for logic purpose please :)\n\t//\n\tfunction rebuilSettings(params) {\n\t\tsettings = Object.assign({}, settings, params);\n\t}\n\n\tfunction drawPoints(factor) {\n\t\tvar points = [];\n\n\t\tfor (var i = 0; i <= settings.bones; i++) {\n\t\t\tvar x = (i / settings.bones) * width;\n\t\t\tvar sinSeed = (factor + (i + (i % settings.bones))) * settings.speed * 100;\n\t\t\tvar sinHeight = Math.sin(sinSeed / 100) * settings.amplitude;\n\t\t\tvar yPos = Math.sin(sinSeed / 100) * sinHeight + settings.height;\n\t\t\tpoints.push({ x: x, y: yPos });\n\t\t}\n\n\t\treturn points;\n\t}\n\n\tfunction drawPath(points) {\n\t\tvar SVGString = \"M \" + points[0].x + \" \" + points[0].y;\n\n\t\tvar cp0 = {\n\t\t\tx: (points[1].x - points[0].x) / 2,\n\t\t\ty: points[1].y - points[0].y + points[0].y + (points[1].y - points[0].y)\n\t\t};\n\n\t\tSVGString +=\n\t\t\t\" C \" +\n\t\t\tcp0.x +\n\t\t\t\" \" +\n\t\t\tcp0.y +\n\t\t\t\" \" +\n\t\t\tcp0.x +\n\t\t\t\" \" +\n\t\t\tcp0.y +\n\t\t\t\" \" +\n\t\t\tpoints[1].x +\n\t\t\t\" \" +\n\t\t\tpoints[1].y;\n\n\t\tvar prevCp = cp0;\n\t\tvar inverted = -1;\n\n\t\tfor (var i = 1; i < points.length - 1; i++) {\n\t\t\tvar cpLength = Math.sqrt(prevCp.x * prevCp.x + prevCp.y * prevCp.y);\n\t\t\tvar cp1 = {\n\t\t\t\tx: points[i].x - prevCp.x + points[i].x,\n\t\t\t\ty: points[i].y - prevCp.y + points[i].y\n\t\t\t};\n\n\t\t\tSVGString +=\n\t\t\t\t\" C \" +\n\t\t\t\tcp1.x +\n\t\t\t\t\" \" +\n\t\t\t\tcp1.y +\n\t\t\t\t\" \" +\n\t\t\t\tcp1.x +\n\t\t\t\t\" \" +\n\t\t\t\tcp1.y +\n\t\t\t\t\" \" +\n\t\t\t\tpoints[i + 1].x +\n\t\t\t\t\" \" +\n\t\t\t\tpoints[i + 1].y;\n\t\t\tprevCp = cp1;\n\t\t\tinverted = -inverted;\n\t\t}\n\n\t\tSVGString += \" L \" + width + \" \" + height;\n\t\tSVGString += \" L 0 \" + height + \" Z\";\n\t\treturn SVGString;\n\t}\n\n\t//  Draw function\n\t//\n\t//\n\tfunction draw() {\n\t\tvar now = window.Date.now();\n\n\t\tif (lastUpdate) {\n\t\t\tvar elapsed = (now - lastUpdate) / 1000;\n\t\t\tlastUpdate = now;\n\n\t\t\ttotalTime += elapsed;\n\n\t\t\tvar factor = totalTime * Math.PI;\n\t\t\ttweenMaxInstance = TweenMax.to(wave, settings.speed, {\n\t\t\t\tattr: {\n\t\t\t\t\td: drawPath(drawPoints(factor))\n\t\t\t\t},\n\t\t\t\tease: Power1.easeInOut\n\t\t\t});\n\t\t} else {\n\t\t\tlastUpdate = now;\n\t\t}\n\n\t\tanimationInstance = requestAnimationFrame(draw);\n\n\t\tif(stopped === true) {\n\t\t\tsetTimeout( function() {\n\t\t\t\tcancelAnimationFrame(animationInstance);\n\t\t\t\tanimationInstance = false;\n\t\t\t}, 500 );\n\t\t}\n\t}\n\n\t//  Pure js debounce function to optimize resize method\n\t//\n\t//\n\tfunction debounce(func, wait, immediate) {\n\t\tvar timeout;\n\t\treturn function() {\n\t\t\tvar context = this,\n\t\t\t    args = arguments;\n\t\t\tclearTimeout(timeout);\n\t\t\ttimeout = setTimeout(function() {\n\t\t\t\ttimeout = null;\n\t\t\t\tif (!immediate) func.apply(context, args);\n\t\t\t}, wait);\n\t\t\tif (immediate && !timeout) func.apply(context, args);\n\t\t};\n\t}\n\n\t//  Redraw for resize with debounce\n\t//\n\tvar redraw = debounce(function() {\n\t\tpause();\n\t\tpoints = [];\n\t\ttotalTime = 0;\n\t\twidth = document.querySelector(settings.container).getBoundingClientRect().width;\n\t\theight = document.querySelector(settings.container).getBoundingClientRect().height;\n\t\tlastUpdate = false;\n\t\tplay();\n\t}, 250);\n\n\tfunction boot() {\n\t\tif (!animationInstance) {\n\t\t\ttweenMaxInstance = TweenMax.set(wave, { attr: { fill: settings.color } });\n\t\t\tplay();\n\t\t\twindow.addEventListener(\"resize\", redraw);\n\t\t}\n\t}\n\n\tfunction reboot(options) {\n\t\tkill();\n\t\tif (typeof options !== undefined) {\n\t\t\trebuilSettings(options);\n\t\t}\n\t\ttweenMaxInstance = TweenMax.set(wave, { attr: { fill: settings.color } });\n\t\tplay();\n\t\twindow.addEventListener(\"resize\", redraw);\n\t}\n\n\tfunction play() {\n\t\tif (!animationInstance) {\n\t\t\tanimationInstance = requestAnimationFrame(draw);\n\t\t}\n\t}\n\n\tfunction pause() {\n\t\tif (animationInstance) {\n\t\t\tcancelAnimationFrame(animationInstance);\n\t\t\tanimationInstance = false;\n\t\t}\n\t}\n\n\tfunction stop() {\n\t\tstopped = true;\n\t\tif (animationInstance) {\n\t\t\tcancelAnimationFrame(animationInstance);\n\t\t\tanimationInstance = false;\n\t\t}\n\t}\n\n\tfunction updateColor(options) {\n\t\tif (typeof options.timing === undefined) {\n\t\t\toptions.timing = 1;\n\t\t}\n\t\tif (typeof options.color === undefined) {\n\t\t\toptions.color = settings.color;\n\t\t}\n\t\ttweenMaxInstance = TweenMax.to(wave, parseInt(options.timing), {\n\t\t\tattr: { fill: options.color },\n\t\t\tonComplete: function() {\n\t\t\t\tif (\n\t\t\t\t\ttypeof options.onComplete !== undefined &&\n\t\t\t\t\t{}.toString.call(options.onComplete) === \"[object Function]\"\n\t\t\t\t) {\n\t\t\t\t\toptions.onComplete();\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\n\tfunction kill() {\n\t\tif (animationInstance) {\n\t\t\tpause();\n\t\t\ttweenMaxInstance.kill();\n\t\t\ttweenMaxInstance = TweenMax.set(wave, {\n\t\t\t\tx: 0,\n\t\t\t\ty: 0,\n\t\t\t\trotation: 0,\n\t\t\t\topacity: 0,\n\t\t\t\tclearProps: \"all\",\n\t\t\t\tattr: {\n\t\t\t\t\td: \"M0,0\",\n\t\t\t\t\tfill: \"\"\n\t\t\t\t}\n\t\t\t});\n\t\t\twindow.removeEventListener(\"resize\", redraw);\n\t\t\tanimationInstance = false;\n\t\t}\n\t}\n\n\t//  Boot Wavify\n\t//\n\tboot();\n\n\treturn {\n\t\treboot: reboot,\n\t\tplay: play,\n\t\tpause: pause,\n\t\tstop: stop,\n\t\tkill: kill,\n\t\tupdateColor: updateColor\n\t};\n}\n\n/*\n * Wavify\n * Jquery Plugin to make some nice waves\n * by peacepostman @ crezeo\n */\n(function ( $ ) {\n\n\t$.fn.wavify = function( options ) {\n\t\tif( 'function' !== typeof wavify )\n\t\t{\n\t\t\tconsole.error( \"wavify is not a function. Be sure to include 'wavify.js' before you include 'jquery.wavify.js'.\" )\n\t\t\tthrow( \"Error: wavify is not a function\")\n\t\t}\n\n\t\treturn wavify( this, options );\n\t};\n\n}(jQuery));\n","(\n\tfunction( $ ) {\n\t\t'use strict';\n\n\t\tvar $body = $( 'body' );\n\n\t\t$( window ).on( 'load', function() {\n\t\t\t$( '.wavify-item' ).each( function() {\n\n\t\t\t\tvar _speed = (\n\t\t\t\t\tMath.random() * (\n\t\t\t\t\t\t0.1 - 0.3\n\t\t\t\t\t) + 0.3\n\t\t\t\t).toFixed( 2 );\n\n\t\t\t\tvar _color     = $( this ).data( 'wavify-background' ) ? $( this ).data( 'wavify-background' ) : '#fff',\n\t\t\t\t    _height    = $( this ).data( 'wavify-height' ) ? $( this ).data( 'wavify-height' ) : 100,\n\t\t\t\t    _bones     = $( this ).data( 'wavify-bones' ) ? $( this ).data( 'wavify-bones' ) : 3,\n\t\t\t\t    _amplitude = $( this ).data( 'wavify-amplitude' ) ? $( this ).data( 'wavify-amplitude' ) : 80,\n\t\t\t\t    _speed     = $( this ).data( 'wavify-speed' ) ? $( this ).data( 'wavify-speed' ) : _speed;\n\n\t\t\t\tvar wavify = $( this ).find( 'path' ).wavify( {\n\t\t\t\t\theight: _height,\n\t\t\t\t\tbones: _bones,\n\t\t\t\t\tamplitude: _amplitude,\n\t\t\t\t\tcolor: _color,\n\t\t\t\t\tspeed: _speed\n\t\t\t\t} );\n\n\t\t\t\t// Stop animation on mobile.\n\t\t\t\tif ( $body.hasClass( 'handheld' ) ) {\n\t\t\t\t\tsetTimeout( function() {\n\n\t\t\t\t\t\twavify.stop();\n\t\t\t\t\t}, 500 );\n\t\t\t\t}\n\n\t\t\t\t//\n\t\t\t} );\n\t\t} );\n\t}( window.jQuery )\n);\n"]}